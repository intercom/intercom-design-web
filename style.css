/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', sans-serif;
    font-size: var(--text-base);
    color: var(--foreground-primary);
    overflow: hidden;
    background: var(--background-primary);
    transition: background-color 0.3s ease, color 0.3s ease;
}

/* Canvas container styles */
#canvas-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
}

#border {
    position: absolute;
    width: 100%;
    height: 100%;
    border: 10px solid var(--accent-blue);
}

/* Canvas styles */
#canvas {
    position: absolute;
    width: 3600px;
    height: 2200px;
    background: var(--background-primary);
    top: 0;
    left: 0;
    transition: transform 0.1s ease-out;
}

/* Grid pattern and cursor illumination effect
 * This creates a pseudo-element that contains our grid pattern
 * The grid is only visible within a circular area around the cursor
 */
#canvas::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /* Accessible grid: higher contrast */
    background-image:
        /* Small dark grid */
        linear-gradient(to right, rgba(80,80,80,0.35) 1px, transparent 1px),
        linear-gradient(to bottom, rgba(80,80,80,0.35) 1px, transparent 1px),
        /* Large bright grid */
        linear-gradient(to right, rgba(255,255,255,0.22) 1px, transparent 2px),
        linear-gradient(to bottom, rgba(255,255,255,0.22) 1px, transparent 2px);
    background-size:
        32px 32px, 32px 32px, /* small grid */
        128px 128px, 128px 128px; /* large grid */
    background-position:
        0 0, 0 0, /* small grid */
        0 0, 0 0; /* large grid */
    opacity: 0;
    transition: opacity 0.3s ease;
    mask-image: radial-gradient(
        circle at var(--cursor-x, 50%) var(--cursor-y, 50%),
        rgb(255, 255, 255) 0%,
        rgb(255, 255, 255) 0px,
        transparent 400px
    );
    -webkit-mask-image: radial-gradient(
        circle at var(--cursor-x, 50%) var(--cursor-y, 50%),
        rgb(255, 255, 255) 0%,
        rgb(255, 255, 255) 0px,
        transparent 400px
    );
}

#canvas::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(
        circle at var(--cursor-x, 50%) var(--cursor-y, 50%),
        var(--cursor-illumination) 0%,
        transparent 10px
    );
    pointer-events: none;
    mask-image: radial-gradient(
        circle at var(--cursor-x, 50%) var(--cursor-y, 50%),
        rgba(0, 0, 0, 0) 0%,
        transparent var(--cursor-illumination-radius)
    );
    -webkit-mask-image: radial-gradient(
        circle at var(--cursor-x, 50%) var(--cursor-y, 50%),
        rgba(0, 0, 0, 0) 0%,
        transparent var(--cursor-illumination-radius)
    );
}

/* When the canvas has the 'illuminated' class (added on mouseenter),
 * make the grid pattern visible
 */
#canvas.illuminated::before {
    opacity: 1;
}


/* Add CSS custom properties for border animation */
@property --angle {
  syntax: '<angle>';
  initial-value: 90deg;
  inherits: true;
}

@property --gradX {
  syntax: '<percentage>';
  initial-value: 50%;
  inherits: true;
}

@property --gradY {
  syntax: '<percentage>';
  initial-value: 0%;
  inherits: true;
}

:root {
  --d: 4s; /* Animation duration */
  --angle: 90deg;
  --gradX: 100%;
  --gradY: 50%;
}

/* Card base styles */
.card {
    background: var(--card-bg);
    box-shadow: var(--shadow-soft);
    color: var(--foreground-primary);
    position: absolute;
    padding: 20px;
    border-radius: 16px;
    cursor: pointer;
    min-width: 281px;
    min-height: 277px;
    transition: transform 0.2s ease, box-shadow 0.2s ease, border-color 0.2s ease;
    border: 1px solid var(--border-tertiary);
    background-clip: padding-box;
}

.card-title {
    padding: 0.5rem;
    color: var(--foreground-secondary);
    font-family: var(--font-mono);
    font-size: var(--text-xs);
    font-weight: var(--font-light);
    line-height: var(--leading-normal);
    letter-spacing: var(--tracking-widest);
}

.card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 16px;
    padding: var(--card-stroke-width);
    background: conic-gradient(
        from 0deg,
        var(--background-tertiary),
        var(--foreground-secondary),
        var(--background-tertiary)
    );
    -webkit-mask: 
        linear-gradient(#fff 0 0) content-box, 
        linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask: 
        linear-gradient(#fff 0 0) content-box, 
        linear-gradient(#fff 0 0);
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.2s ease;
}

.card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-soft);
    border: var(--card-stroke-width) solid var(--border-tertiary);
    border-radius: 16px;
    background-image: 
        linear-gradient(var(--card-bg), var(--card-bg)),
        conic-gradient(
            from var(--angle),
            var(--background-tertiary),
            var(--foreground-secondary) 0.1turn,
            var(--foreground-secondary) 0.15turn,
            var(--background-tertiary) 0.25turn
        );
    background-origin: border-box;
    background-clip: padding-box, border-box;
    animation: borderRotate var(--d) linear infinite forwards;
}

@keyframes borderRotate {
    100% {
        --angle: 420deg;
    }
}

#logo {
    background: transparent !important;
    box-shadow: none !important;
    border: none !important;
    color: rgb(42, 42, 42) !important;
    text-decoration: none !important;
    text-transform: none !important;
    pointer-events: auto !important;
    z-index: -10 !important;
}

#logo a {
    color: inherit !important;
    text-decoration: none !important;
    font-size: 6rem;

}

/* Modal styles */
.modal {
    display: none;
    position: fixed;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    z-index: 2000;
}

.modal-content {
    position: absolute;
    top: 1rem;
    right: 1rem;
    bottom: 1rem;
    width: 50%;
    background: var(--card-bg);
    padding: 2rem;
    border-radius: 8px;
    box-shadow: var(--shadow-soft);
    opacity: 0;
    z-index: 10000;
    border: 1px solid var(--card-border);
}

.modal-content h2 {
    font-family: 'Inter', sans-serif;
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    color: var(--foreground-primary);
}

.modal-content-body {
    font-family: 'Inter', sans-serif;
    font-size: 1rem;
    line-height: 1.6;
    color: var(--foreground-secondary);
}

.close-button {
    position: absolute;
    right: 1.5rem;
    top: 1.5rem;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--foreground-secondary);
    transition: color 0.2s ease;
}

.close-button:hover {
    color: var(--foreground-primary);
}

/* Card type specific styles */
.image-card {
    width: 600px;
    height: 400px;
    padding: 0;
    overflow: hidden;
}

.image-card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 16px;
    display: block;
}

.image-card a {
    display: block;
    width: 100%;
    height: 100%;
}

.youtube-card {
    width: 483px;
    height: 272px;
    padding: 0;
    overflow: hidden;
    position: relative;
}

.youtube-thumbnail {
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    transition: filter 0.3s ease;
}

.youtube-play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 48px;
    color: rgba(255, 255, 255, 0.8);
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    pointer-events: none;
    transition: color 0.3s ease;
}

.youtube-card:hover .youtube-thumbnail {
    filter: blur(2px) brightness(0.8);
}

.youtube-card:hover .youtube-play-button {
    color: rgba(255, 255, 255, 1);
}

.folder-card {
    display: flex;
    align-items: center;
    gap: 10px;
}

.folder-card img {
    width: 24px;
    height: 24px;
}

.spotify-card {
    min-width: unset;
    min-height: unset;
    width: 591px;
    height: 119px;
}

#minimap {
    position: fixed;
    bottom: 1rem;
    left: 1rem;
    background: rgba(25, 25, 25, 0.9);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(67, 67, 67, 0.3);
    border-radius: 12px;
    z-index: 10000;
    box-shadow: var(--shadow-soft);
    overflow: hidden;
}

#minimap .minimap-card {
    position: absolute;
    border-radius: 3px;
    pointer-events: none;
    transition: transform 0.2s ease;
}

#minimap .minimap-card:hover {
    transform: scale(1.1);
    z-index: 1;
}

/* Remove card type specific styles for minimap */
#minimap .image-card,
#minimap .youtube-card,
#minimap .spotify-card,
#minimap .text-card,
#minimap .folder-card {
    background: var(--border-tertiary);
    border: none;
}

#map-viewport {
    position: absolute;
    border: 1px solid rgba(46, 46, 46, 0.3);
    border-radius: 4px;
    background: rgba(39, 39, 39, 0.5);
    pointer-events: none;
    z-index: 2;
    transition: border-color 0.3s ease, background-color 0.3s ease;
}

#map-viewport:hover {
    border-color: rgba(255, 255, 255, 0.5);
    background: rgba(255, 255, 255, 0.15);
}

/* Main menu styles */
.main-menu {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 64px;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2000;
    background: linear-gradient(to bottom, var(--background-primary) 1%, transparent 40%);
    padding: 0 40px;
    box-sizing: border-box;
}

.menu-left {
    font-weight: var(--font-normal);
    font-size: var(--text-base);
    letter-spacing: var(--tracking-wide);
    color: var(--foreground-primary);
}

.menu-center {
    display: flex;
    gap: 64px;
    justify-content: center;
    position: relative;
}

.menu-center a {
    color: var(--foreground-primary);
    font-family: 'DM Mono', monospace;
    font-size: var(--text-sm);
    font-weight: 300;
    letter-spacing: var(--tracking-wider);
    text-decoration: none;
    position: relative;
    padding: 2px 0;
    display: flex;
    align-items: center;
    gap: 8px;
    transition: color 0.2s;
    text-transform: uppercase;
}

.menu-center a::after {
    content: '';
    position: absolute;
    width: 0;
    height: 1px;
    bottom: 0;
    left: 0;
    background-color: var(--accent-orange);
    transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.menu-center a:hover {
    color: var(--accent-orange);
}

.menu-center a:hover::after {
    width: 100%;
}

.link-icon {
    width: 9px;
    height: 9px;
    display: inline-block;
    margin-top: 5px;
    align-self: flex-start;
}

.menu-center a:hover .link-icon {
    filter: brightness(0) saturate(100%) invert(48%) sepia(98%) saturate(2472%) hue-rotate(346deg) brightness(101%) contrast(101%);
}

/* Remove the old hover effects */
.menu-center a::before {
    display: none;
}

@keyframes terminalGlow {
    0% {
        text-shadow: 0 0 0 rgba(255, 69, 0, 0);
    }
    50% {
        text-shadow: 0 0 8px rgba(255, 69, 0, 0.3);
    }
    100% {
        text-shadow: 0 0 0 rgba(255, 69, 0, 0);
    }
}

.menu-center a:hover {
    animation: terminalGlow 1.5s ease-in-out infinite;
}

/* Active indicator pulse */
@keyframes pulse {
    0% {
        box-shadow: 0 0 0 0 rgba(255, 69, 0, 0.6);
    }
    70% {
        box-shadow: 0 0 0 8px rgba(255, 69, 0, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(255, 69, 0, 0);
    }
}

.active-indicator {
    width: 8px;
    height: 8px;
    background: var(--accent-orange);
    display: inline-block;
    position: relative;
    align-self: center;
}

.menu-center a:hover .active-indicator {
    animation: pulse 2s infinite;
}

.menu-right {
    display: flex;
    align-items: center;
}

.join-btn {
    color: var(--foreground-primary);
    background: transparent;
    border: 1px solid var(--border-tertiary);
    border-radius: 8px;
    padding: 8px 20px;
    font-size: var(--text-base);
    font-weight: 500;
    text-decoration: none;
    transition: background 0.2s, color 0.2s, border-color 0.2s;
    margin-left: 16px;
}

.join-btn:hover {
    background: var(--foreground-primary);
    color: var(--background-primary);
    border-color: var(--foreground-primary);
}

.card-corner-overlay {
  pointer-events: none;
  position: absolute;
  top: -40px; left: -40px; right: -40px; bottom: -40px;
  width: calc(100% + 80px);
  height: calc(100% + 80px);
  border: 1px solid var(--grid-color, rgba(255,255,255,0.4));
  border-radius: 0;
  opacity: 0;
  transition: opacity 0.2s cubic-bezier(0.4,0,0.2,1);
  z-index: 20;
  /* Mask out all but corners, sharp cutoff, smaller corners */
  mask-image: 
    radial-gradient(circle at 0 0, white 0 7px, transparent 7px),
    radial-gradient(circle at 100% 0, white 0 7px, transparent 7px),
    radial-gradient(circle at 0 100%, white 0 7px, transparent 7px),
    radial-gradient(circle at 100% 100%, white 0 7px, transparent 7px);
  mask-composite: add;
  -webkit-mask-image: 
    radial-gradient(circle at 0 0, white 0 7px, transparent 7px),
    radial-gradient(circle at 100% 0, white 0 7px, transparent 7px),
    radial-gradient(circle at 0 100%, white 0 7px, transparent 7px),
    radial-gradient(circle at 100% 100%, white 0 7px, transparent 7px);
  -webkit-mask-composite: source-over;
}

.card:hover .card-corner-overlay {
  opacity: 1;
}

.menu-center a.active {
    color: var(--foreground-primary);
}