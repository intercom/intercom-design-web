/* Reset and base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'DM Mono', monospace;
    overflow: hidden;
    background: var(--background-primary);
    color: var(--foreground-primary);
    transition: background-color 0.3s ease, color 0.3s ease;
}

/* Canvas container styles */
#canvas-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
}

#border {
    position: absolute;
    width: 100%;
    height: 100%;
    border: 10px solid var(--accent-blue);
}

/* Canvas styles */
#canvas {
    position: absolute;
    width: 3600px;
    height: 2200px;
    background: var(--background-primary);
    top: 0;
    left: 0;
    transition: transform 0.1s ease-out;
}

/* Grid pattern and cursor illumination effect
 * This creates a pseudo-element that contains our grid pattern
 * The grid is only visible within a circular area around the cursor
 */
#canvas::before {
    /* Create a full-size overlay */
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    /* Create the dot pattern using radial gradients */
    background-image: radial-gradient(
        circle at center,
        var(--grid-color) 1px,
        transparent 1px
    );
    background-size: 20px 20px; /* Reduced from 35px to 20px to make dots closer together */

    /* Start with the grid invisible */
    opacity: 0;
    transition: opacity 0.3s ease;

    /* Create a feathered border effect using mask-image */
    mask-image: radial-gradient(
        circle at var(--cursor-x, 50%) var(--cursor-y, 50%),
        rgb(255, 255, 255) 0%,
        rgb(255, 255, 255) 0px,
        transparent 400px
    );
    -webkit-mask-image: radial-gradient(
        circle at var(--cursor-x, 50%) var(--cursor-y, 50%),
        rgb(255, 255, 255) 0%,
        rgb(255, 255, 255) 0px,
        transparent 400px
    );
}

#canvas::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(
        circle at var(--cursor-x, 50%) var(--cursor-y, 50%),
        var(--cursor-illumination) 0%,
        transparent 10px
    );
    pointer-events: none;
    mask-image: radial-gradient(
        circle at var(--cursor-x, 50%) var(--cursor-y, 50%),
        rgba(0, 0, 0, 0) 0%,
        transparent var(--cursor-illumination-radius)
    );
    -webkit-mask-image: radial-gradient(
        circle at var(--cursor-x, 50%) var(--cursor-y, 50%),
        rgba(0, 0, 0, 0) 0%,
        transparent var(--cursor-illumination-radius)
    );
}

/* When the canvas has the 'illuminated' class (added on mouseenter),
 * make the grid pattern visible
 */
#canvas.illuminated::before {
    opacity: 1;
}

/* Center logo styles */
#center-logo {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 200px;
    height: auto;
    z-index: 1000;
    pointer-events: none;
}

/* Add CSS custom properties for border animation */
@property --angle {
  syntax: '<angle>';
  initial-value: 90deg;
  inherits: true;
}

@property --gradX {
  syntax: '<percentage>';
  initial-value: 50%;
  inherits: true;
}

@property --gradY {
  syntax: '<percentage>';
  initial-value: 0%;
  inherits: true;
}

:root {
  --d: 4s; /* Animation duration */
  --angle: 90deg;
  --gradX: 100%;
  --gradY: 50%;
}

/* Card base styles */
.card {
    background: var(--card-bg);
    box-shadow: var(--shadow-soft);
    font-family: "DM Mono", monospace;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: normal;
    letter-spacing: 0.8px;
    text-transform: uppercase;
    color: var(--foreground-primary);
    position: absolute;
    padding: 20px;
    border-radius: 16px;
    cursor: pointer;
    min-width: 281px;
    min-height: 277px;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    border: var(--card-stroke-width) solid transparent;
}

.card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 16px;
    padding: var(--card-stroke-width);
    background: conic-gradient(
        from 0deg,
        var(--background-tertiary),
        var(--foreground-secondary),
        var(--background-tertiary)
    );
    -webkit-mask: 
        linear-gradient(#fff 0 0) content-box, 
        linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask: 
        linear-gradient(#fff 0 0) content-box, 
        linear-gradient(#fff 0 0);
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.2s ease;
}

.card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-soft);
    border-image: conic-gradient(
        from var(--angle),
        var(--background-tertiary),
        var(--foreground-secondary) 0.1turn,
        var(--foreground-secondary) 0.15turn,
        var(--background-tertiary) 0.25turn
    ) 1;
    animation: borderRotate var(--d) linear infinite forwards;
}

@keyframes borderRotate {
    100% {
        --angle: 420deg;
    }
}

#logo {
    background: transparent !important;
    box-shadow: none !important;
    border: none !important;
    font-family: 'Inter', sans-serif !important;
    font-size: 5.5rem !important;
    font-weight: 700 !important;
    letter-spacing: -0.02em !important;
    color: var(--foreground-primary) !important;
    text-decoration: none !important;
    text-transform: none !important;
    pointer-events: auto !important;
    z-index: -10 !important;
}

#logo a {
    color: inherit !important;
    text-decoration: none !important;
}

/* Modal styles */
.modal {
    display: none;
    position: fixed;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    z-index: 2000;
}

.modal-content {
    position: absolute;
    top: 1rem;
    right: 1rem;
    bottom: 1rem;
    width: 50%;
    background: var(--card-bg);
    padding: 2rem;
    border-radius: 8px;
    box-shadow: var(--shadow-soft);
    opacity: 0;
    z-index: 10000;
    border: 1px solid var(--card-border);
}

.modal-content h2 {
    font-family: 'Inter', sans-serif;
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    color: var(--foreground-primary);
}

.modal-content-body {
    font-family: 'Inter', sans-serif;
    font-size: 1rem;
    line-height: 1.6;
    color: var(--foreground-secondary);
}

.close-button {
    position: absolute;
    right: 1.5rem;
    top: 1.5rem;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--foreground-secondary);
    transition: color 0.2s ease;
}

.close-button:hover {
    color: var(--foreground-primary);
}

/* Card type specific styles */
.image-card img {
    width: 100%;
    height: auto;
    border-radius: 4px;
}

.youtube-card iframe,
.spotify-card iframe {
    width: 100%;
    height: auto;
    border: none;
    border-radius: 4px;
}

.folder-card {
    display: flex;
    align-items: center;
    gap: 10px;
}

.folder-card img {
    width: 24px;
    height: 24px;
}

.youtube-card iframe {
    width: 483px !important;
    height: 272px !important;
    border: none;
    border-radius: 4px;
    display: block;
}

/* Example: override for YouTube and Spotify cards if needed */
.youtube-card {
    width: 483px;
    height: 272px;
}

.spotify-card {
    min-width: unset;
    min-height: unset;
    width: 591px;
    height: 119px;
}

#minimap {
    position: fixed;
    bottom: 1rem;
    left: 1rem;
    background: var(--minimap-bg);
    backdrop-filter: blur(var(--minimap-blur));
    -webkit-backdrop-filter: blur(var(--minimap-blur));
    border: 1px solid var(--minimap-border);
    border-radius: 12px;
    z-index: 10000;
    box-shadow: var(--shadow-soft);
    overflow: hidden;
}

#minimap .minimap-card {
    position: absolute;
    background: var(--card-bg);
    border: 1px solid var(--card-border);
    border-radius: 4px;
    pointer-events: none;
    transition: transform 0.2s ease;
}

#minimap .minimap-card:hover {
    transform: scale(1.1);
    z-index: 1;
}

/* Card type specific styles */
#minimap .image-card {
    background: var(--card-bg);
}

#minimap .youtube-card {
    background: var(--youtube-card-bg);
    border-color: var(--youtube-card-border);
}

#minimap .spotify-card {
    background: var(--spotify-card-bg);
    border-color: var(--spotify-card-border);
}

#minimap .text-card {
    background: var(--background-tertiary);
}

#minimap .folder-card {
    background: var(--background-tertiary);
}

#map-viewport {
    position: absolute;
    border: 2px solid var(--border-primary);
    background: var(--background-tertiary);
    pointer-events: none;
    z-index: 2;
}

/* Theme Switcher */
.theme-switcher {
    position: fixed;
    top: 1.5rem;
    right: 1.5rem;
    z-index: 1000;
    background: var(--card-bg);
    border: 2px solid var(--border-primary);
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: var(--shadow-soft);
    padding: 0;
    margin: 0;
}

.theme-switcher:hover {
    transform: scale(1.1);
    box-shadow: var(--shadow-soft), 0 0 0 2px var(--border-glow);
    background: var(--background-tertiary);
}

.theme-switcher svg {
    width: 24px;
    height: 24px;
    fill: var(--foreground-primary);
    transition: transform 0.3s ease;
}

.theme-switcher:hover svg {
    transform: rotate(15deg);
}

/* Ensure the theme switcher is always visible */
.theme-switcher:focus {
    outline: none;
    box-shadow: var(--shadow-soft), 0 0 0 3px var(--border-glow);
}

/* Theme-specific grid colors
 * Dark theme: White grid lines at 15% opacity
 * Light theme: Black grid lines at 10% opacity
 */
body.light {
    /* ... existing variables ... */
}